let n = 0;
let numCorrect = 0;

const QUESTIONS = [{
    question: "What major key is this?",
    image: `<img src="static/images/e-major.png"/>`,
    options: ["A major", "C major", "E major", "F# major"],
    answer: "E major"
  },

  {
    question: "What major key is this?",
    image: `<img src="static/images/f-major.png"/>`,
    options: ["F major", "G major", "Eb major", "D major"],
    answer: "F major"
  },

  {
    question: "What minor key is this?",
    image: `<img src="static/images/c-flat-major.png"/>`,
    options: ["Bb minor", "C minor", "Db minor", "Eb minor"],
    answer: "Eb minor"
  },

  {
    question: "What major key is this?",
    image: `<img src="static/images/c-sharp-major.png"/>`,
    options: ["C major", "E major", "F major", "C# major"],
    answer: "C# major"
  },

  {
    question: "What minor key is this?",
    image: `<img src="static/images/g-flat-major.png"/>`,
    options: ["F minor", "D minor", "C minor", "Gb minor"],
    answer: "Gb minor"
  },

  {
    question: "What major key is this?",
    image: `<img src="static/images/a-major.png"/>`,
    options: ["D major", "A major", "B major", "F# major"],
    answer: "A major"
  },

  {
    question: "What minor key is this?",
    image: `<img src="static/images/a-flat-major.png"/>`,
    options: ["B minor", "G minor", "E minor", "F minor"],
    answer: "F minor"
  },

  {
    question: "What minor key is this?",
    image: `<img src="static/images/b-flat-major.png"/>`,
    options: ["Ab minor", "B minor", "G minor", "C# minor"],
    answer: "G minor"
  },

  {
    question: "What major key is this?",
    image: `<img src="static/images/b-major.png"/>`,
    options: ["C# major", "D major", "B major", "A major"],
    answer: "B major"
  },

  {
    question: "What minor key is this?",
    image: `<img src="static/images/e-flat-major.png"/>`,
    options: ["Bb minor", "C minor", "A minor", "F minor"],
    answer: "C minor"
  }

];

/**
 *startGame function will remove the quiz directions, the nav buttons and the start and submit buttons. 
 *It will trigger first question to be generated by calling the newQuestion function. 
 */

function startGame() {
  let welcome = document.getElementById("welcome");
  let buttonsContainer = document.getElementById("nav-buttons");
  let startButton = document.getElementById("start");
  let submitButton = document.getElementById("submit");

  welcome.style.display = "none";
  buttonsContainer.classList.remove("hidden");
  startButton.style.display = "none";
  submitButton.style.display = "none";

  newQuestion();
};

/**
 * readyQuestion function will prepare the question area to be generated by: 
 * hiding the message element.
 * removing the correct or incorrect classes. 
 * It will call the newQuestion function to generate the next question.
 */
function readyQuestion() {
  let message = document.getElementById("message");
  let checkButton = document.getElementById("check");
  let options = Array.from(document.querySelectorAll(".option-container"));

  options.forEach(option => {
    option.classList.remove("disabled");
  });

  message.classList.add("hidden");
  checkButton.setAttribute("disabled", true);


  if (document.querySelector(".correct")) {
    document.querySelector(".correct").classList.remove("correct");
  } else if (document.querySelector(".incorrect")) {
    document.querySelector(".incorrect").classList.remove("incorrect");
  } else if (document.querySelector(".selected")) {
    document.querySelector(".selected").classList.remove("selected");
  }

  newQuestion();
}

/**
 * newQuestion function will first set the image element to image src in the questions array.
 * It will set the question element to the question in the questions array.
 * It will then loop through the options array and set each option element's inner text to the option in the questions array.
 * It will increment the n counter by one to advance the question. If the last question has been reached, the function will display the submit button and hide the next button.
 * It will call the select answer function.
 */
function newQuestion() {
  let image = document.getElementById("image-container");
  let question = document.querySelector("#question");
  let options = Array.from(document.querySelectorAll(".option-container"));
  let optionContainer = document.getElementById("option-container");
  let nextButton = document.getElementById("next");

  nextButton.setAttribute("disabled", true);
  optionContainer.classList.remove("hidden");
  image.innerHTML = QUESTIONS[n].image;

  question.innerHTML = QUESTIONS[n].question;

  for (let i = 0; i < 4; i++) {
    options[i].innerText = QUESTIONS[n].options[i];
  }

  n++;
  if (n === QUESTIONS.length) {
    submitButton.style.display = "inline-block";
    nextButton.classList.add("hidden");
  }

  selectAnswer();
}

/**
 * selectAnswer function will loop through the options array and assign a click event to each option. If an option is clicked, it will make the other options unclickable. 
 * Once an option has been clicked, it will call the exposeCheck function.
 */
function selectAnswer() {
  let options = Array.from(document.querySelectorAll(".option-container"));

  options.forEach(option => {
    option.addEventListener("click", () => {
      option.classList.add("selected");
      exposeCheck();
      options.forEach(option => {
        if (!option.classList.contains("selected")) {
          option.classList.add("disabled");
        }
      });
    });
  });
}

/**
 * exposeCheck function removes the disabled attribute on the checkAnswer button to allow the user to click on this button to check their answer. 
 */
function exposeCheck() {
  let checkButton = document.getElementById("check");

  checkButton.removeAttribute("disabled");
  checkButton.classList.remove("btn-secondary");
  checkButton.classList.add("checkactive");
};
/**
 * checkAnswer function compares the selected option to the answer in the questions array. 
 * If they are the same, the correct class is added turning the option green. A message is displayed to tell the user that they were correct. 
 * If they are not the same, the incorrect class is adding turning the option red. A message is displayed to tell the user that they were correct, and tells the correct answer. 
 * If correct, the score increments by 1. 
 * If incorrect, the score does not increment.
 * The disabled attribute is removed from the next button, and the readyQuestion function is called. 
 */
function checkAnswer() {

  let i = n - 1;
  let selection = document.querySelector(".selected");
  let selectionValue = document.querySelector(".selected").innerHTML;
  let answer = QUESTIONS[i].answer;
  let score = document.getElementById("score");
  let message = document.getElementById("message");
  let nextButton = document.getElementById("next");

  message.classList.remove("hidden");

  if (selectionValue === answer) {
    numCorrect++;
    selection.classList.add("correct");
    message.innerHTML = `Congratulations! You're correct.`;
  } else {
    selection.classList.add("incorrect");
    message.innerHTML = `Oops! The correct answer is ${answer}.`;
  }

  score.innerHTML = `<div>Score: <br>${numCorrect} / ${QUESTIONS.length}</div>`;
  selection.classList.remove("selected");
  nextButton.removeAttribute("disabled");
  nextButton.addEventListener("click", readyQuestion);
}

/**
 * submit function hides the message element. It tells the user their score out of ten. If higher than 7, it congratulates the user and instructs them how to play again. 
 * If lower than 7, it redirects the user to the lesson page.
 */
function submit() {
  let backButtons = document.getElementById("back-buttons");
  let gameContainer = document.getElementById("game");
  let message = document.getElementById("message");
  let buttonsContainer = document.getElementById("nav-buttons");

  message.classList.add("hidden");
  buttonsContainer.classList.add("hidden");
  backButtons.classList.remove("hidden");

  if (numCorrect > 7) {
    gameContainer.innerHTML = `<div class="end-game mb-5">You scored ${numCorrect} / ${QUESTIONS.length}. Well done! Tap start to try the game again.</div>`;
  } else {
    gameContainer.innerHTML = `<div class="end-game mb-5">You scored ${numCorrect} / ${QUESTIONS.length}. Tap the lesson button to review how to identify the key signatures and then try again!</div>`;
  }
}

window.addEventListener("DOMContentLoaded", () => {
  let startButton = document.getElementById("start");
  let submitButton = document.getElementById("submit");
  let checkButton = document.getElementById("check");
  startButton.addEventListener("click", startGame);
  checkButton.addEventListener("click", checkAnswer);
  submitButton.addEventListener("click", submit);
});

module.exports = {
  startGame
};